files named compiler.mach.os.comp indicate the
Fortran compilation and load flags for use on the
machine "mach" that uses the UNIX operating
system "os" and for the compiler "comp".

Each line contains the name of an atribute that
can be set, and equals sign (=) and the value
that is to be ascribed to the atribute. If the
latter contains spaces/blanks, it should be
surrounded by ''. If no value is to be
ascribed, there is no need for a string beyond =.

Look at any of the compiler.*.*.* files for
suggestions and examples.

Current atribute are (with defaults/options):

FORTRAN           fortran compiler command (gfortran, ifort, nagfor, etc)
BASIC             compiler basic compile options (-c -fPIC)
MBASIC            compiler basic compile options for matlab (-fPIC)
I8                compiler flag to convert integers to 64bit (-i8)
LIBCMD            compiler link library options
MODCMD            compiler module create options (-module $MOD -I$MOD)
MODCMDB           compiler module access options (-I$MOD)
MVMODS ':'        command needed to move module info files to module diectory
OPTIMIZATION      compiler optimization level (-O)
NOOPTIMIZATION    compiler no optimization level (-O0)
DEBUG             compiler debug flag (-g)
OPENMP            compiler openMP flag (-fopenmp, -gomp)
SOMP              compiler openMP flag for SPRAL packages (-gomp)
F77               extra compiler flags specifically for fortran 77 programs
F90               extra compiler flags specifically for fortran 90+ programs
F95               extra compiler flags specifically for fortran 95+ programs
NOFMAIN           compiler load flag to supress loading main program
CCONDEF           C pre-processing defines (-DIntel_ifor)
USUAL             extra compiler flags that are available for usual runs
SPECIAL           extra compiler flags that are available for debug runs
F77SUFFIX         suffix that distinguishes old-source (fortran 77) codes (f77)
F95SUFFIX         suffix that distinguishes new-source (fortran 90+) codes (f90)
CUDA              is there a separate CUDA compiler? (cuda or blank)
CUDACOMP          CUDA compiler command ($FORTRAN, nvcc)
CUDAARCH          CUDA architecture (compute_35)
CUDACODE          CUDA code (sm_35)
CUDABASIC         CUDA basic flags (-dc -I. -Iinclude)
CUDALIBS          CUDA link library options
CUDAOPENMP        CUDA opeMP flags ($OPENMP)
TIMER             depricated code to suggest name of CPU timer (GEN)
BLAS              options to link BLAS (-lgalahad_blas)
LAPACK            options to link LAPACK (-lgalahad_lapack)
OMP4              is OMP version 4 available? (yes, no)
IEEECK            IEEECK for untrapped arithmetic (no or blank)
HSL               options to link HSL codes (-lgalahad-hsl)
SPRAL             options to link SPRAL codes (-lgalahad_spral)
METIS4            options to link Metis 4 codes (-lgalahad_metis4)
METIS5            options to link Metis 5 codes
PARDISO           options to link Pardiso Project codes (-lgalahad_pardiso)
MKL_PARDISO       options to link MKL Pardiso codes (-lgalahad_mkl_pardiso)
WSMP              options to link WSMP codes  (-lgalahad_wsmp)
NOT95             is the compiler at least fortran 95? (IS95/NOT95)
NOT64             is the operating system 64-bit? (IS64/NOT64)
INTEGER           compile with this integer type (32bit/64bit)
QUADREAL          are 128-bit (quadruple) reals supported? (no, yes or blank)
BINSHELL          the default UNIX shell used (usually sh)
